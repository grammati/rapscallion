* Documentation
** TODO Write README - not-too-long tutorial introcution
** TODO Write feature-by-feature documentation
** TODO Write a set of realistic examples the demonstrate how the features are useful

* Features
** TODO Template libraries.
   Allow defns and matchers to be defined in another file. Include
   those defintions in a template via: rap:include="..."?

** TODO Filter templates
   Programmatically pipe the output of a template through a
   match-template.

** TODO Import function definitions into templates.
   Decide on how to import code - eg: rap:require and/or rap:use attrs
   on the root element?

** Matchers
*** TODO Decide on which "action"s to implement (replace, append, ...)
*** TODO Decide on whether matchers are recursive by default.
    They can either be recursive, and must be explicitly rooted with a
    leading /, or they can be rooted and must be explicitly made
    recursive with a leading //.
*** TODO Implement matching on attributes.
*** TODO Implement matching on metadata.

* Cleanup
** TODO Rename rapscallion.core/compile to avoid conflicts.
** TODO Decide on what exactly constitutes the public interface.
** TODO After deciding on the public interface, write docstrings.
** TODO


